# Top level views
GET    /                                       @org.sagebionetworks.bridge.play.controllers.ApplicationController.loadApp
GET    /index.html                             @org.sagebionetworks.bridge.play.controllers.ApplicationController.loadApp
GET    /mobile/verifyStudyEmail.html           @org.sagebionetworks.bridge.play.controllers.ApplicationController.verifyStudyEmail(study: String ?= "api")
GET    /mobile/verifyEmail.html                @org.sagebionetworks.bridge.play.controllers.ApplicationController.verifyEmail(study: String ?= "api")
GET    /mobile/resetPassword.html              @org.sagebionetworks.bridge.play.controllers.ApplicationController.resetPassword(study: String ?= "api")
GET    /mobile/startSession.html               @org.sagebionetworks.bridge.play.controllers.ApplicationController.startSession(study: String ?= null, email: String ?= null, token: String ?= null)
GET    /mobile/:study/startSession.html        @org.sagebionetworks.bridge.play.controllers.ApplicationController.startSession(study: String, email: String ?= null, token: String ?= null)
GET    /vse                                    @org.sagebionetworks.bridge.play.controllers.ApplicationController.verifyStudyEmail(study: String ?= "api")
GET    /ve                                     @org.sagebionetworks.bridge.play.controllers.ApplicationController.verifyEmail(study: String ?= "api")
GET    /rp                                     @org.sagebionetworks.bridge.play.controllers.ApplicationController.resetPassword(study: String ?= "api")
GET    /s/:study                               @org.sagebionetworks.bridge.play.controllers.ApplicationController.startSession(study: String, email: String ?= null, token: String ?= null)
GET    /.well-known/assetlinks.json            @org.sagebionetworks.bridge.play.controllers.ApplicationController.androidAppLinks
GET    /.well-known/apple-app-site-association @org.sagebionetworks.bridge.play.controllers.ApplicationController.appleAppLinks
GET    /r/:token                               @org.sagebionetworks.bridge.play.controllers.ApplicationController.redirectToURL(token: String)

# Authentication
POST   /v3/auth/signIn                  @org.sagebionetworks.bridge.play.controllers.AuthenticationController.signInV3
POST   /v3/auth/signOut                 @org.sagebionetworks.bridge.play.controllers.AuthenticationController.signOut
POST   /v4/auth/signOut                 @org.sagebionetworks.bridge.play.controllers.AuthenticationController.signOutV4
POST   /v3/auth/reauth                  @org.sagebionetworks.bridge.play.controllers.AuthenticationController.reauthenticate
POST   /v3/auth/requestResetPassword    @org.sagebionetworks.bridge.play.controllers.AuthenticationController.requestResetPassword
POST   /v3/auth/resetPassword           @org.sagebionetworks.bridge.play.controllers.AuthenticationController.resetPassword
POST   /v3/auth/signUp                  @org.sagebionetworks.bridge.play.controllers.AuthenticationController.signUp
POST   /v3/auth/verifyEmail             @org.sagebionetworks.bridge.play.controllers.AuthenticationController.verifyEmail
POST   /v3/auth/resendEmailVerification @org.sagebionetworks.bridge.play.controllers.AuthenticationController.resendEmailVerification
POST   /v3/auth/verifyPhone             @org.sagebionetworks.bridge.play.controllers.AuthenticationController.verifyPhone
POST   /v3/auth/resendPhoneVerification @org.sagebionetworks.bridge.play.controllers.AuthenticationController.resendPhoneVerification
POST   /v3/auth/email                   @org.sagebionetworks.bridge.play.controllers.AuthenticationController.requestEmailSignIn
POST   /v3/auth/email/signIn            @org.sagebionetworks.bridge.play.controllers.AuthenticationController.emailSignIn
POST   /v3/auth/phone                   @org.sagebionetworks.bridge.play.controllers.AuthenticationController.requestPhoneSignIn
POST   /v3/auth/phone/signIn            @org.sagebionetworks.bridge.play.controllers.AuthenticationController.phoneSignIn
POST   /v4/auth/signIn                  @org.sagebionetworks.bridge.play.controllers.AuthenticationController.signIn

# OAuth
POST /v3/oauth/:vendorId    @org.sagebionetworks.bridge.play.controllers.OAuthController.requestAccessToken(vendorId: String)

# Compound Activity Definitions
GET    /v3/compoundactivitydefinitions @org.sagebionetworks.bridge.play.controllers.CompoundActivityDefinitionController.getAllCompoundActivityDefinitionsInStudy
POST   /v3/compoundactivitydefinitions @org.sagebionetworks.bridge.play.controllers.CompoundActivityDefinitionController.createCompoundActivityDefinition
GET    /v3/compoundactivitydefinitions/:taskId @org.sagebionetworks.bridge.play.controllers.CompoundActivityDefinitionController.getCompoundActivityDefinition(taskId: String)
DELETE /v3/compoundactivitydefinitions/:taskId @org.sagebionetworks.bridge.play.controllers.CompoundActivityDefinitionController.deleteCompoundActivityDefinition(taskId: String)
POST   /v3/compoundactivitydefinitions/:taskId @org.sagebionetworks.bridge.play.controllers.CompoundActivityDefinitionController.updateCompoundActivityDefinition(taskId: String)

# Export
POST /v3/export/start @org.sagebionetworks.bridge.play.controllers.ExportController.startOnDemandExport

# Health Data
POST /v3/healthdata @org.sagebionetworks.bridge.play.controllers.HealthDataController.submitHealthData

# Users
POST   /v3/users                          @org.sagebionetworks.bridge.play.controllers.UserManagementController.createUser
DELETE /v3/users/:userId                  @org.sagebionetworks.bridge.play.controllers.UserManagementController.deleteUser(userId: String)
GET    /v3/users/self                     @org.sagebionetworks.bridge.play.controllers.UserProfileController.getUserProfile
POST   /v3/users/self                     @org.sagebionetworks.bridge.play.controllers.UserProfileController.updateUserProfile
POST   /v3/users/self/externalId          @org.sagebionetworks.bridge.play.controllers.UserProfileController.createExternalIdentifier
POST   /v3/users/self/emailData           @org.sagebionetworks.bridge.play.controllers.UserDataDownloadController.requestUserData
POST   /v3/users/self/sendData            @org.sagebionetworks.bridge.play.controllers.UserDataDownloadController.requestUserData
GET    /v3/users/self/unsubscribeEmail    @org.sagebionetworks.bridge.play.controllers.EmailController.unsubscribeFromEmail
POST   /v3/users/self/unsubscribeEmail    @org.sagebionetworks.bridge.play.controllers.EmailController.unsubscribeFromEmail
POST   /v3/users/self/dataSharing         @org.sagebionetworks.bridge.play.controllers.ConsentController.changeSharingScope
GET    /v3/users/self/dataGroups          @org.sagebionetworks.bridge.play.controllers.UserProfileController.getDataGroups
POST   /v3/users/self/dataGroups          @org.sagebionetworks.bridge.play.controllers.UserProfileController.updateDataGroups
GET    /v3/users/self/reports/:identifier @org.sagebionetworks.bridge.play.controllers.ParticipantReportController.getParticipantReportForSelf(identifier: String, startDate: String ?= null, endDate: String ?= null)
POST   /v3/users/self/reports/:identifier @org.sagebionetworks.bridge.play.controllers.ParticipantReportController.saveParticipantReportForSelf(identifier: String)
GET    /v4/users/self/reports/:identifier @org.sagebionetworks.bridge.play.controllers.ParticipantReportController.getParticipantReportForSelfV4(identifier: String, startTime: String ?= null, endTime: String ?= null, offsetKey: String ?= null, pageSize: String ?= null)
POST   /v4/users/self/reports/:identifier @org.sagebionetworks.bridge.play.controllers.ParticipantReportController.saveParticipantReportForSelf(identifier: String)

# Participant reports (and see above for self endpoints)
GET    /v3/participants/reports                           @org.sagebionetworks.bridge.play.controllers.ParticipantReportController.listParticipantReportIndices()
POST   /v3/participants/reports/:identifier               @org.sagebionetworks.bridge.play.controllers.ParticipantReportController.saveParticipantReportForWorker(identifier: String)
DELETE /v3/participants/reports/:identifier               @org.sagebionetworks.bridge.play.controllers.ParticipantReportController.deleteParticipantReportIndex(identifier: String)
GET    /v3/participants/:userId/reports/:identifier       @org.sagebionetworks.bridge.play.controllers.ParticipantReportController.getParticipantReport(userId: String, identifier: String, startDate: String ?= null, endDate: String ?= null)
POST   /v3/participants/:userId/reports/:identifier       @org.sagebionetworks.bridge.play.controllers.ParticipantReportController.saveParticipantReport(userId: String, identifier: String)
DELETE /v3/participants/:userId/reports/:identifier       @org.sagebionetworks.bridge.play.controllers.ParticipantReportController.deleteParticipantReport(userId: String, identifier: String)
DELETE /v3/participants/:userId/reports/:identifier/:date @org.sagebionetworks.bridge.play.controllers.ParticipantReportController.deleteParticipantReportRecord(userId: String, identifier: String, date: String)
GET    /v4/participants/:userId/reports/:identifier       @org.sagebionetworks.bridge.play.controllers.ParticipantReportController.getParticipantReportV4(userId: String, identifier: String, startTime: String ?= null, endTime: String ?= null, offsetKey: String ?= null, pageSize: String ?= null)
POST   /v4/participants/:userId/reports/:identifier       @org.sagebionetworks.bridge.play.controllers.ParticipantReportController.saveParticipantReport(userId: String, identifier: String)
DELETE /v4/participants/:userId/reports/:identifier       @org.sagebionetworks.bridge.play.controllers.ParticipantReportController.deleteParticipantReport(userId: String, identifier: String)

# Participants Researcher APIs
GET    /v3/participants                  @org.sagebionetworks.bridge.play.controllers.ParticipantController.getParticipants(offsetBy: String ?= null, pageSize: String ?= null, emailFilter: String ?= null, phoneFilter: String ?= null, startDate: String ?= null, endDate: String ?= null, startTime: String ?= null, endTime: String ?= null)
POST   /v3/participants                  @org.sagebionetworks.bridge.play.controllers.ParticipantController.createParticipant
GET    /v3/participants/self             @org.sagebionetworks.bridge.play.controllers.ParticipantController.getSelfParticipant
POST   /v3/participants/self             @org.sagebionetworks.bridge.play.controllers.ParticipantController.updateSelfParticipant
POST   /v3/participants/self/identifiers @org.sagebionetworks.bridge.play.controllers.ParticipantController.updateIdentifiers

GET    /v3/participants/:userId                                        @org.sagebionetworks.bridge.play.controllers.ParticipantController.getParticipant(userId: String, consents: Boolean ?= true)
POST   /v3/participants/:userId                                        @org.sagebionetworks.bridge.play.controllers.ParticipantController.updateParticipant(userId: String)
DELETE /v3/participants/:userId                                        @org.sagebionetworks.bridge.play.controllers.ParticipantController.deleteTestParticipant(userId: String)
GET    /v3/participants/:userId/uploads                                @org.sagebionetworks.bridge.play.controllers.ParticipantController.getUploads(userId: String, startTime: String ?= null, endTime: String ?= null, pageSize: Integer ?= null, offsetKey: String ?= null)
GET    /v3/participants/:userId/requestInfo                            @org.sagebionetworks.bridge.play.controllers.ParticipantController.getRequestInfo(userId: String)
DELETE /v3/participants/:userId/activities                             @org.sagebionetworks.bridge.play.controllers.ParticipantController.deleteActivities(userId: String)
GET    /v3/participants/:userId/activities/:activityType/:referentGuid @org.sagebionetworks.bridge.play.controllers.ParticipantController.getActivityHistoryV3(userId: String, activityType: String, referentGuid: String, scheduledOnStart: String ?= null, scheduledOnEnd: String ?= null, offsetKey: String ?= null, pageSize: String ?= null)
GET    /v3/participants/:userId/activities/:activityGuid               @org.sagebionetworks.bridge.play.controllers.ParticipantController.getActivityHistoryV2(userId: String, activityGuid: String, scheduledOnStart: String ?= null, scheduledOnEnd: String ?= null, offsetBy: String ?= null, offsetKey: String ?= null, pageSize: String ?= null)
GET    /v3/participants/:userId/notifications                          @org.sagebionetworks.bridge.play.controllers.ParticipantController.getNotificationRegistrations(userId: String)
POST   /v3/participants/:userId/sendNotification                       @org.sagebionetworks.bridge.play.controllers.ParticipantController.sendNotification(userId: String)
POST   /v3/participants/:userId/signOut                                @org.sagebionetworks.bridge.play.controllers.ParticipantController.signOut(userId: String, deleteReauthToken: Boolean ?= true)
POST   /v3/participants/:userId/requestResetPassword                   @org.sagebionetworks.bridge.play.controllers.ParticipantController.requestResetPassword(userId: String)
POST   /v3/participants/:userId/resendEmailVerification                @org.sagebionetworks.bridge.play.controllers.ParticipantController.resendEmailVerification(userId: String)
POST   /v3/participants/:userId/resendPhoneVerification                @org.sagebionetworks.bridge.play.controllers.ParticipantController.resendPhoneVerification(userId: String)
POST   /v3/participants/:userId/consents/withdraw                      @org.sagebionetworks.bridge.play.controllers.ParticipantController.withdrawFromAllConsents(userId: String)
POST   /v3/participants/:userId/consents/:guid/resendConsent           @org.sagebionetworks.bridge.play.controllers.ParticipantController.resendConsentAgreement(userId: String, guid: String)
POST   /v3/participants/:userId/consents/:guid/withdraw                @org.sagebionetworks.bridge.play.controllers.ParticipantController.withdrawConsent(userId: String, guid: String)
GET    /v3/participants/:userId/activityEvents                         @org.sagebionetworks.bridge.play.controllers.ParticipantController.getActivityEvents(userId: String)
POST   /v3/participants/:userId/sendSmsMessage                         @org.sagebionetworks.bridge.play.controllers.ParticipantController.sendSmsMessage(userId: String)

# Shared Module
POST   /v3/sharedmodules/:id/import                   @org.sagebionetworks.bridge.play.controllers.SharedModuleController.importModuleByIdLatestPublishedVersion(id: String)
POST   /v3/sharedmodules/:id/versions/:version/import @org.sagebionetworks.bridge.play.controllers.SharedModuleController.importModuleByIdAndVersion(id: String, version: Int)

# Shared Module Metadata
GET    /v3/sharedmodules/metadata                       @org.sagebionetworks.bridge.play.controllers.SharedModuleMetadataController.queryAllMetadata(mostrecent: String ?= "true", published: String ?= "false", q: String ?= null, tags: String ?= null)
POST   /v3/sharedmodules/metadata                       @org.sagebionetworks.bridge.play.controllers.SharedModuleMetadataController.createMetadata
GET    /v3/sharedmodules/metadata/:id                   @org.sagebionetworks.bridge.play.controllers.SharedModuleMetadataController.getMetadataByIdLatestVersion(id: String)
GET    /v3/sharedmodules/metadata/:id/versions          @org.sagebionetworks.bridge.play.controllers.SharedModuleMetadataController.queryMetadataById(id:String, mostrecent: String ?= "true", published: String ?= "false", q: String ?= null, tags: String ?= null)
DELETE /v3/sharedmodules/metadata/:id/versions          @org.sagebionetworks.bridge.play.controllers.SharedModuleMetadataController.deleteMetadataByIdAllVersions(id: String)
GET    /v3/sharedmodules/metadata/:id/versions/:version @org.sagebionetworks.bridge.play.controllers.SharedModuleMetadataController.getMetadataByIdAndVersion(id: String, version: Int)
POST   /v3/sharedmodules/metadata/:id/versions/:version @org.sagebionetworks.bridge.play.controllers.SharedModuleMetadataController.updateMetadata(id: String, version: Int)
DELETE /v3/sharedmodules/metadata/:id/versions/:version @org.sagebionetworks.bridge.play.controllers.SharedModuleMetadataController.deleteMetadataByIdAndVersion(id: String, version: Int)

# Study Subpopulations
GET    /v3/subpopulations        @org.sagebionetworks.bridge.play.controllers.SubpopulationController.getAllSubpopulations
POST   /v3/subpopulations        @org.sagebionetworks.bridge.play.controllers.SubpopulationController.createSubpopulation
GET    /v3/subpopulations/:guid  @org.sagebionetworks.bridge.play.controllers.SubpopulationController.getSubpopulation(guid: String)
POST   /v3/subpopulations/:guid  @org.sagebionetworks.bridge.play.controllers.SubpopulationController.updateSubpopulation(guid: String)
DELETE /v3/subpopulations/:guid  @org.sagebionetworks.bridge.play.controllers.SubpopulationController.deleteSubpopulation(guid: String, physical: String ?= "false")

# Consents (now associated to a subpopulation)
GET    /v3/subpopulations/:guid/consents/signature            @org.sagebionetworks.bridge.play.controllers.ConsentController.getConsentSignatureV2(guid: String)
POST   /v3/subpopulations/:guid/consents/signature            @org.sagebionetworks.bridge.play.controllers.ConsentController.giveV3(guid: String)
POST   /v3/subpopulations/:guid/consents/signature/withdraw   @org.sagebionetworks.bridge.play.controllers.ConsentController.withdrawConsentV2(guid: String)
POST   /v3/subpopulations/:guid/consents/signature/email      @org.sagebionetworks.bridge.play.controllers.ConsentController.resendConsentAgreement(guid: String)
POST   /v3/subpopulations/:guid/consents/signature/resend     @org.sagebionetworks.bridge.play.controllers.ConsentController.resendConsentAgreement(guid: String)
GET    /v3/subpopulations/:guid/consents                      @org.sagebionetworks.bridge.play.controllers.StudyConsentController.getAllConsentsV2(guid: String)
POST   /v3/subpopulations/:guid/consents                      @org.sagebionetworks.bridge.play.controllers.StudyConsentController.addConsentV2(guid: String)
GET    /v3/subpopulations/:guid/consents/recent               @org.sagebionetworks.bridge.play.controllers.StudyConsentController.getMostRecentConsentV2(guid: String)
GET    /v3/subpopulations/:guid/consents/published            @org.sagebionetworks.bridge.play.controllers.StudyConsentController.getActiveConsentV2(guid: String)
GET    /v3/subpopulations/:guid/consents/:timestamp           @org.sagebionetworks.bridge.play.controllers.StudyConsentController.getConsentV2(guid: String, timestamp: String)
POST   /v3/subpopulations/:guid/consents/:timestamp/publish   @org.sagebionetworks.bridge.play.controllers.StudyConsentController.publishConsentV2(guid: String, timestamp: String)

# Consents (these now return the default subpopulation... not that useful but will prevent anything from breaking)
GET    /v3/consents/signature            @org.sagebionetworks.bridge.play.controllers.ConsentController.getConsentSignature
POST   /v3/consents/signature            @org.sagebionetworks.bridge.play.controllers.ConsentController.giveV2
POST   /v3/consents/signature/withdraw   @org.sagebionetworks.bridge.play.controllers.ConsentController.withdrawConsent
POST   /v3/consents/signature/email      @org.sagebionetworks.bridge.play.controllers.ConsentController.emailCopy
POST   /v3/consents/withdraw             @org.sagebionetworks.bridge.play.controllers.ConsentController.withdrawFromAllConsents
GET    /v3/consents                      @org.sagebionetworks.bridge.play.controllers.StudyConsentController.getAllConsents
POST   /v3/consents                      @org.sagebionetworks.bridge.play.controllers.StudyConsentController.addConsent
GET    /v3/consents/recent               @org.sagebionetworks.bridge.play.controllers.StudyConsentController.getMostRecentConsent
GET    /v3/consents/published            @org.sagebionetworks.bridge.play.controllers.StudyConsentController.getActiveConsent
GET    /v3/consents/:timestamp           @org.sagebionetworks.bridge.play.controllers.StudyConsentController.getConsent(timestamp: String)
POST   /v3/consents/:timestamp/publish   @org.sagebionetworks.bridge.play.controllers.StudyConsentController.publishConsent(timestamp: String)

# Study reports (and see below for worker endpoints)
GET    /v3/reports                    @org.sagebionetworks.bridge.play.controllers.StudyReportController.listStudyReportIndices(type: String ?= null)
GET    /v3/reports/:identifier        @org.sagebionetworks.bridge.play.controllers.StudyReportController.getStudyReport(identifier: String, startDate: String ?= null, endDate: String ?= null)
POST   /v3/reports/:identifier        @org.sagebionetworks.bridge.play.controllers.StudyReportController.saveStudyReport(identifier: String)
GET    /v3/reports/:identifier/index  @org.sagebionetworks.bridge.play.controllers.StudyReportController.getStudyReportIndex(identifier: String)
POST   /v3/reports/:identifier/index  @org.sagebionetworks.bridge.play.controllers.StudyReportController.updateStudyReportIndex(identifier: String)
DELETE /v3/reports/:identifier        @org.sagebionetworks.bridge.play.controllers.StudyReportController.deleteStudyReport(identifier: String)
DELETE /v3/reports/:identifier/:date  @org.sagebionetworks.bridge.play.controllers.StudyReportController.deleteStudyReportRecord(identifier: String, date: String)
GET    /v4/reports/:identifier        @org.sagebionetworks.bridge.play.controllers.StudyReportController.getStudyReportV4(identifier: String, startTime: String ?= null, endTime: String ?= null, offsetKey: String ?= null, pageSize: String ?= null)
POST   /v4/reports/:identifier        @org.sagebionetworks.bridge.play.controllers.StudyReportController.saveStudyReport(identifier: String)
DELETE /v4/reports/:identifier        @org.sagebionetworks.bridge.play.controllers.StudyReportController.deleteStudyReport(identifier: String)

# Surveys
GET    /v3/surveys                                           @org.sagebionetworks.bridge.play.controllers.SurveyController.getAllSurveysMostRecentVersion
POST   /v3/surveys                                           @org.sagebionetworks.bridge.play.controllers.SurveyController.createSurvey
GET    /v3/surveys/recent                                    @org.sagebionetworks.bridge.play.controllers.SurveyController.getAllSurveysMostRecentVersion
GET    /v3/surveys/published                                 @org.sagebionetworks.bridge.play.controllers.SurveyController.getAllSurveysMostRecentlyPublishedVersion
GET    /v3/surveys/:surveyGuid/revisions                     @org.sagebionetworks.bridge.play.controllers.SurveyController.getSurveyAllVersions(surveyGuid: String)
GET    /v3/surveys/:surveyGuid/revisions/recent              @org.sagebionetworks.bridge.play.controllers.SurveyController.getSurveyMostRecentVersion(surveyGuid: String)
GET    /v3/surveys/:surveyGuid/revisions/published           @org.sagebionetworks.bridge.play.controllers.SurveyController.getSurveyMostRecentlyPublishedVersion(surveyGuid: String)
POST   /v3/surveys/:surveyGuid/revisions/:createdOn/version  @org.sagebionetworks.bridge.play.controllers.SurveyController.versionSurvey(surveyGuid: String, createdOn: String)
POST   /v3/surveys/:surveyGuid/revisions/:createdOn/publish  @org.sagebionetworks.bridge.play.controllers.SurveyController.publishSurvey(surveyGuid: String, createdOn: String, newSchemaRev: String ?= null)
GET    /v3/surveys/:surveyGuid/revisions/:createdOn          @org.sagebionetworks.bridge.play.controllers.SurveyController.getSurvey(surveyGuid: String, createdOn: String)
POST   /v3/surveys/:surveyGuid/revisions/:createdOn          @org.sagebionetworks.bridge.play.controllers.SurveyController.updateSurvey(surveyGuid: String, createdOn: String)
DELETE /v3/surveys/:surveyGuid/revisions/:createdOn          @org.sagebionetworks.bridge.play.controllers.SurveyController.deleteSurvey(surveyGuid: String, createdOn: String, physical: String ?= "false")

# Schedules
GET    /v3/schedules   @org.sagebionetworks.bridge.play.controllers.ScheduleController.getSchedulesV3
GET    /v4/schedules   @org.sagebionetworks.bridge.play.controllers.ScheduleController.getSchedules

# ScheduledActivities (nee Tasks)
GET    /v3/tasks                          @org.sagebionetworks.bridge.play.controllers.ScheduledActivityController.getTasks(until: String ?= null, offset: String ?= null, daysAhead: String ?= null)
POST   /v3/tasks                          @org.sagebionetworks.bridge.play.controllers.ScheduledActivityController.updateScheduledActivities()
GET    /v3/activities                     @org.sagebionetworks.bridge.play.controllers.ScheduledActivityController.getScheduledActivities(until: String ?= null, offset: String ?= null, daysAhead: String ?= null, minimumPerSchedule: String ?= null)
POST   /v3/activities                     @org.sagebionetworks.bridge.play.controllers.ScheduledActivityController.updateScheduledActivities()
GET    /v3/activities/:activityGuid       @org.sagebionetworks.bridge.play.controllers.ScheduledActivityController.getActivityHistory(activityGuid: String, scheduledOnStart: String ?= null, scheduledOnEnd: String ?= null, offsetBy: String ?= null, offsetKey ?= null, pageSize: String ?= null)

GET    /v4/activities/:activityType/:referrentGuid @org.sagebionetworks.bridge.play.controllers.ScheduledActivityController.getActivityHistoryV3(activityType: String, referrentGuid: String, scheduledOnStart: String ?= null, scheduledOnEnd: String ?= null, offsetKey ?= null, pageSize: String ?= null)
GET    /v4/activities/:referrentGuid               @org.sagebionetworks.bridge.play.controllers.ScheduledActivityController.getActivityHistoryV3(activityType: String, referrentGuid: String, scheduledOnStart: String ?= null, scheduledOnEnd: String ?= null, offsetKey ?= null, pageSize: String ?= null)
GET    /v4/activities                              @org.sagebionetworks.bridge.play.controllers.ScheduledActivityController.getScheduledActivitiesByDateRange(startTime: String ?= null, endTime: String ?= null)
POST   /v4/activities                              @org.sagebionetworks.bridge.play.controllers.ScheduledActivityController.updateScheduledActivities()

# Uploads
POST   /v3/uploads                     @org.sagebionetworks.bridge.play.controllers.UploadController.upload
POST   /v3/uploads/:uploadId/complete  @org.sagebionetworks.bridge.play.controllers.UploadController.uploadComplete(uploadId: String, synchronous: String ?= "false")
GET    /v3/uploadstatuses/:uploadId    @org.sagebionetworks.bridge.play.controllers.UploadController.getValidationStatus(uploadId: String)
GET    /v3/uploads/:uploadId           @org.sagebionetworks.bridge.play.controllers.UploadController.getUpload(uploadId: String)

# Upload Schemas
GET    /v3/uploadschemas                               @org.sagebionetworks.bridge.play.controllers.UploadSchemaController.getUploadSchemasForStudy
POST   /v3/uploadschemas                               @org.sagebionetworks.bridge.play.controllers.UploadSchemaController.createOrUpdateUploadSchema
POST   /v4/uploadschemas                               @org.sagebionetworks.bridge.play.controllers.UploadSchemaController.createSchemaRevisionV4
POST   /v4/uploadschemas/:schemaId/revisions/:revision @org.sagebionetworks.bridge.play.controllers.UploadSchemaController.updateSchemaRevisionV4(schemaId: String, revision: Int)
GET    /v3/uploadschemas/:schemaId                     @org.sagebionetworks.bridge.play.controllers.UploadSchemaController.getUploadSchemaAllRevisions(schemaId: String)
GET    /v3/uploadschemas/:schemaId/recent              @org.sagebionetworks.bridge.play.controllers.UploadSchemaController.getUploadSchema(schemaId: String)
GET    /v3/uploadschemas/:schemaId/revisions/:rev      @org.sagebionetworks.bridge.play.controllers.UploadSchemaController.getUploadSchemaByIdAndRev(schemaId: String, rev: Int)

# Schedule Plans
GET    /v3/scheduleplans        @org.sagebionetworks.bridge.play.controllers.SchedulePlanController.getSchedulePlans
POST   /v3/scheduleplans        @org.sagebionetworks.bridge.play.controllers.SchedulePlanController.createSchedulePlan
GET    /v3/scheduleplans/:guid  @org.sagebionetworks.bridge.play.controllers.SchedulePlanController.getSchedulePlan(guid: String)
POST   /v3/scheduleplans/:guid  @org.sagebionetworks.bridge.play.controllers.SchedulePlanController.updateSchedulePlan(guid: String)
DELETE /v3/scheduleplans/:guid  @org.sagebionetworks.bridge.play.controllers.SchedulePlanController.deleteSchedulePlan(guid: String)

# Activity Events
GET    /v1/activityevents @org.sagebionetworks.bridge.play.controllers.ActivityEventController.getSelfActivityEvents
POST   /v1/activityevents @org.sagebionetworks.bridge.play.controllers.ActivityEventController.createCustomActivityEvent

# Notifications
GET    /v3/notifications                      @org.sagebionetworks.bridge.play.controllers.NotificationRegistrationController.getAllRegistrations
POST   /v3/notifications                      @org.sagebionetworks.bridge.play.controllers.NotificationRegistrationController.createRegistration
GET    /v3/notifications/:guid                @org.sagebionetworks.bridge.play.controllers.NotificationRegistrationController.getRegistration(guid: String)
POST   /v3/notifications/:guid                @org.sagebionetworks.bridge.play.controllers.NotificationRegistrationController.updateRegistration(guid: String)
DELETE /v3/notifications/:guid                @org.sagebionetworks.bridge.play.controllers.NotificationRegistrationController.deleteRegistration(guid: String)
GET    /v3/notifications/:guid/subscriptions  @org.sagebionetworks.bridge.play.controllers.NotificationRegistrationController.getSubscriptionStatuses(guid: String)
POST   /v3/notifications/:guid/subscriptions  @org.sagebionetworks.bridge.play.controllers.NotificationRegistrationController.subscribe(guid: String)
 
# Topics
GET    /v3/topics                        @org.sagebionetworks.bridge.play.controllers.NotificationTopicController.getAllTopics
POST   /v3/topics                        @org.sagebionetworks.bridge.play.controllers.NotificationTopicController.createTopic
GET    /v3/topics/:guid                  @org.sagebionetworks.bridge.play.controllers.NotificationTopicController.getTopic(guid: String)
POST   /v3/topics/:guid                  @org.sagebionetworks.bridge.play.controllers.NotificationTopicController.updateTopic(guid: String)
DELETE /v3/topics/:guid                  @org.sagebionetworks.bridge.play.controllers.NotificationTopicController.deleteTopic(guid: String)
POST   /v3/topics/:guid/sendNotification @org.sagebionetworks.bridge.play.controllers.NotificationTopicController.sendNotification(guid: String)

# AppConfigs
GET    /v3/appconfigs        @org.sagebionetworks.bridge.play.controllers.AppConfigController.getAppConfigs
GET    /v3/appconfigs/:guid  @org.sagebionetworks.bridge.play.controllers.AppConfigController.getAppConfig(guid: String)
POST   /v3/appconfigs        @org.sagebionetworks.bridge.play.controllers.AppConfigController.createAppConfig
POST   /v3/appconfigs/:guid  @org.sagebionetworks.bridge.play.controllers.AppConfigController.updateAppConfig(guid: String)
DELETE /v3/appconfigs/:guid  @org.sagebionetworks.bridge.play.controllers.AppConfigController.deleteAppConfig(guid: String)

# Intent to Participant (ITP)
POST   /v3/itp @org.sagebionetworks.bridge.play.controllers.IntentController.submitIntentToParticipate

# Bridge Exporter
POST /v3/recordexportstatuses  @org.sagebionetworks.bridge.play.controllers.HealthDataController.updateRecordsStatus
POST /v3/recordExportStatuses  @org.sagebionetworks.bridge.play.controllers.HealthDataController.updateRecordsStatus

# Studies
GET    /v3/studies                     @org.sagebionetworks.bridge.play.controllers.StudyController.getAllStudies(format: String ?= null, summary: String ?= null)
POST   /v3/studies                     @org.sagebionetworks.bridge.play.controllers.StudyController.createStudy
POST   /v3/studies/init                @org.sagebionetworks.bridge.play.controllers.StudyController.createStudyAndUsers
GET    /v3/studies/self                @org.sagebionetworks.bridge.play.controllers.StudyController.getCurrentStudy
GET    /v3/studies/self/publicKey      @org.sagebionetworks.bridge.play.controllers.StudyController.getStudyPublicKeyAsPem
GET    /v3/studies/self/emailStatus    @org.sagebionetworks.bridge.play.controllers.StudyController.getEmailStatus
POST   /v3/studies/self/emails/resendVerify @org.sagebionetworks.bridge.play.controllers.StudyController.resendVerifyEmail(type: String ?= null)
POST   /v3/studies/self/verifyEmail    @org.sagebionetworks.bridge.play.controllers.StudyController.verifySenderEmail
GET    /v3/studies/self/uploads        @org.sagebionetworks.bridge.play.controllers.StudyController.getUploads(startTime: String ?= null, endTime: String ?= null, pageSize: java.lang.Integer ?= null, offsetKey: String ?= null)
POST   /v3/studies/self                @org.sagebionetworks.bridge.play.controllers.StudyController.updateStudyForDeveloper
POST   /v3/studies/self/synapseProject @org.sagebionetworks.bridge.play.controllers.StudyController.createSynapse
GET    /v3/studies/:identifier         @org.sagebionetworks.bridge.play.controllers.StudyController.getStudy(identifier: String)
POST   /v3/studies/:identifier         @org.sagebionetworks.bridge.play.controllers.StudyController.updateStudy(identifier: String)
DELETE /v3/studies/:identifier         @org.sagebionetworks.bridge.play.controllers.StudyController.deleteStudy(identifier: String, physical: String ?= "true")
POST   /v3/studies/:identifier/emails/verify @org.sagebionetworks.bridge.play.controllers.StudyController.verifyEmail(identifier: String, token: String ?= null, type: String ?= null)
GET    /v3/studies/:identifier/appconfig     @org.sagebionetworks.bridge.play.controllers.AppConfigController.getStudyAppConfig(identifier: String)

GET    /v3/externalIds                      @org.sagebionetworks.bridge.play.controllers.ExternalIdController.getExternalIds(offsetKey: String ?= null, pageSize: String ?= null, idFilter: String ?= null, assignmentFilter: String ?= null)
POST   /v3/externalIds                      @org.sagebionetworks.bridge.play.controllers.ExternalIdController.addExternalIds
DELETE /v3/externalIds                      @org.sagebionetworks.bridge.play.controllers.ExternalIdController.deleteExternalIds
POST   /v3/externalIds/:externalId/password @org.sagebionetworks.bridge.play.controllers.ExternalIdController.generatePassword(externalId: String, createAccount: Boolean ?= true)

# Worker APIs for getting entities across studies
GET  /v3/studies/:studyId/surveys/published                                           @org.sagebionetworks.bridge.play.controllers.SurveyController.getAllSurveysMostRecentlyPublishedVersionForStudy(studyId: String)
GET  /v3/studies/:studyId/uploadschemas/:schemaId/revisions/:revision                 @org.sagebionetworks.bridge.play.controllers.UploadSchemaController.getUploadSchemaByStudyAndSchemaAndRev(studyId: String, schemaId: String, revision: Int)
GET  /v3/studies/:studyId/reports/:identifier                                         @org.sagebionetworks.bridge.play.controllers.StudyReportController.getPublicStudyReport(studyId: String, identifier: String, startDate: String ?= null, endDate: String ?= null)
POST /v3/studies/:studyId/reports/:identifier                                         @org.sagebionetworks.bridge.play.controllers.StudyReportController.saveStudyReportForWorker(studyId: String, identifier: String)
GET  /v3/studies/:studyId/uploads                                                     @org.sagebionetworks.bridge.play.controllers.StudyController.getUploadsForStudy(studyId: String, startTime: String ?= null, endTime: String ?= null, pageSize: java.lang.Integer ?= null, offsetKey: String ?= null)
GET  /v3/studies/:studyId/participants                                                @org.sagebionetworks.bridge.play.controllers.ParticipantController.getParticipantsForWorker(studyId: String, offsetBy: String ?= null, pageSize: String ?= null, emailFilter: String ?= null, phoneFilter: String ?= null, startDate: String ?= null, endDate: String ?= null, startTime: String ?= null, endTime: String ?= null)
GET  /v3/studies/:studyId/participants/:userId                                        @org.sagebionetworks.bridge.play.controllers.ParticipantController.getParticipantForWorker(studyId: String, userId: String, consents: Boolean ?= true)
POST /v3/studies/:studyId/participants/:userId/sendSmsMessage                         @org.sagebionetworks.bridge.play.controllers.ParticipantController.sendSmsMessageForWorker(studyId: String, userId: String)
GET  /v3/studies/:studyId/oauth/:vendorId                                             @org.sagebionetworks.bridge.play.controllers.OAuthController.getHealthCodesGrantingAccess(studyId: String, vendorId: String, offsetKey: String ?= null, pageSize: String ?= null)
GET  /v3/studies/:studyId/oauth/:vendorId/:healthCode                                 @org.sagebionetworks.bridge.play.controllers.OAuthController.getAccessToken(studyId: String, vendorId: String, healthCode: String)
GET  /v3/studies/:studyId/scheduleplans                                               @org.sagebionetworks.bridge.play.controllers.SchedulePlanController.getSchedulePlansForWorker(studyId: String)
GET  /v3/studies/:studyId/participants/:userId/activities/:activityType/:referentGuid @org.sagebionetworks.bridge.play.controllers.ParticipantController.getActivityHistoryForWorkerV3(studyId: String, userId: String, activityType: String, referentGuid: String, scheduledOnStart: String ?= null, scheduledOnEnd: String ?= null, offsetKey: String ?= null, pageSize: String ?= null)
GET  /v3/studies/:studyId/participants/:userId/activities/:activityGuid               @org.sagebionetworks.bridge.play.controllers.ParticipantController.getActivityHistoryForWorkerV2(studyId: String, userId: String, activityGuid: String, scheduledOnStart: String ?= null, scheduledOnEnd: String ?= null, offsetBy: String ?= null, offsetKey: String ?= null, pageSize: String ?= null)
GET  /v3/studies/:studyId/participants/:userId/activityEvents                         @org.sagebionetworks.bridge.play.controllers.ParticipantController.getActivityEventsForWorker(studyId: String, userId: String)

# Backfills
GET    /v3/backfill/:name          @org.sagebionetworks.bridge.play.controllers.BackfillController.backfill(name: String)
POST   /v3/backfill/:name/start    @org.sagebionetworks.bridge.play.controllers.BackfillController.start(name: String)
 
# Admin APIs for across studies
POST   /v3/studies/:studyId/users                                       @org.sagebionetworks.bridge.play.controllers.UserManagementController.createUserWithStudyId(studyId: String)
DELETE /v3/studies/:studyId/uploadschemas/:schemaId                     @org.sagebionetworks.bridge.play.controllers.UploadSchemaController.deleteAllRevisionsOfUploadSchema(studyId: String, schemaId: String)

# Cache Management
GET    /v3/cache           @org.sagebionetworks.bridge.play.controllers.CacheAdminController.listItems
DELETE /v3/cache/:cacheKey @org.sagebionetworks.bridge.play.controllers.CacheAdminController.removeItem(cacheKey: String)

# FOOTBALL PLAYERS HEATH STUDY API --------------------------------------------------------------------------

GET    /fphs/externalId   @org.sagebionetworks.bridge.play.controllers.FPHSController.verifyExternalIdentifier(identifier: String ?= null)
POST   /fphs/externalId   @org.sagebionetworks.bridge.play.controllers.FPHSController.registerExternalIdentifier
POST   /fphs/externalIds  @org.sagebionetworks.bridge.play.controllers.FPHSController.addExternalIdentifiers

# OLD API ----------------------------------------------------------------------------------------------------

# API - Authentication
POST   /api/v1/auth/signIn                  @org.sagebionetworks.bridge.play.controllers.AuthenticationController.signInV3
GET    /api/v1/auth/signOut                 @org.sagebionetworks.bridge.play.controllers.AuthenticationController.signOut
POST   /api/v1/auth/requestResetPassword    @org.sagebionetworks.bridge.play.controllers.AuthenticationController.requestResetPassword
POST   /api/v1/auth/resetPassword           @org.sagebionetworks.bridge.play.controllers.AuthenticationController.resetPassword
POST   /api/v1/auth/signUp                  @org.sagebionetworks.bridge.play.controllers.AuthenticationController.signUp
POST   /api/v1/auth/verifyEmail             @org.sagebionetworks.bridge.play.controllers.AuthenticationController.verifyEmail
POST   /api/v1/auth/resendEmailVerification @org.sagebionetworks.bridge.play.controllers.AuthenticationController.resendEmailVerification

# API - Users
GET    /api/v1/profile                   @org.sagebionetworks.bridge.play.controllers.UserProfileController.getUserProfile
POST   /api/v1/profile                   @org.sagebionetworks.bridge.play.controllers.UserProfileController.updateUserProfile

# API - User Settings
POST   /api/v1/profile/external-id       @org.sagebionetworks.bridge.play.controllers.UserProfileController.createExternalIdentifier
POST   /api/v1/profile/unsubscribe       @org.sagebionetworks.bridge.play.controllers.EmailController.unsubscribeFromEmail
GET    /api/v1/profile/unsubscribe       @org.sagebionetworks.bridge.play.controllers.EmailController.unsubscribeFromEmail

# API - Surveys
GET    /api/v2/surveys/:surveyGuid/revisions/published     @org.sagebionetworks.bridge.play.controllers.SurveyController.getSurveyMostRecentlyPublishedVersionForUser(surveyGuid: String)
GET    /api/v2/surveys/:surveyGuid/revisions/:createdOn    @org.sagebionetworks.bridge.play.controllers.SurveyController.getSurveyForUser(surveyGuid: String, createdOn: String)

# API - Schedules
GET    /api/v1/schedules   @org.sagebionetworks.bridge.play.controllers.ScheduleController.getSchedulesV1

# API - Consent
POST   /api/v1/consent                       @org.sagebionetworks.bridge.play.controllers.ConsentController.giveV1
POST   /api/v2/consent                       @org.sagebionetworks.bridge.play.controllers.ConsentController.giveV2
GET    /api/v1/consent                       @org.sagebionetworks.bridge.play.controllers.ConsentController.getConsentSignature
GET    /api/v2/consent                       @org.sagebionetworks.bridge.play.controllers.ConsentController.getConsentSignature
POST   /api/v1/consent/email                 @org.sagebionetworks.bridge.play.controllers.ConsentController.emailCopy
POST   /api/v1/consent/dataSharing/suspend   @org.sagebionetworks.bridge.play.controllers.ConsentController.suspendDataSharing
POST   /api/v1/consent/dataSharing/resume    @org.sagebionetworks.bridge.play.controllers.ConsentController.resumeDataSharing
POST   /api/v2/consent/dataSharing           @org.sagebionetworks.bridge.play.controllers.ConsentController.changeSharingScope

# API - Upload
POST   /api/v1/upload                  @org.sagebionetworks.bridge.play.controllers.UploadController.upload
POST   /api/v1/upload/:id/complete     @org.sagebionetworks.bridge.play.controllers.UploadController.uploadComplete(id: String, synchronous: String ?= "false")
GET    /api/v1/upload/:id/status       @org.sagebionetworks.bridge.play.controllers.UploadController.getValidationStatus(id: String)

# Assets, there are only two, a robots file and a favicon.ico
GET    /*file controllers.Assets.at(path="/public", file)